package jp.quadro.utils{	import flash.utils.ByteArray;		public class ObjectUtil	{		public static function contains(obj:Object, member:Object):Boolean		{			for (var prop:String in obj) if (obj[prop] == member) return true;						return false;		}				public static function clone(obj:Object):Object		{			var byteArray:ByteArray = new ByteArray();			byteArray.writeObject(obj);			byteArray.position = 0;						return byteArray.readObject();		}				public static function getKeys(obj:Object):Array		{			var keys:Array = new Array();			for (var i:String in obj) keys.push(i);						return keys;		}				public static function isUndefined(obj:Object):Boolean		{			return obj is undefined;		}				public static function isNull(obj:Object):Boolean		{			return obj === null;		}				public static function isEmpty(obj:*):Boolean		{			if (obj == undefined) return true;			if (obj is Number) return isNaN(obj);			if (obj is Array || obj is String) return obj.length == 0;			if (obj is Object)			{				for (var prop:String in obj) return false;								return true;			}						return false;		}	}}